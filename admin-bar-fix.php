<?php
/*
	Plugin Name: Admin Bar Fix
	Plugin URI: https://wp-speedup.eu
	Description: WordPress Admin Bar Fix
	Version: 2.4
	Author: KubiQ
	Author URI: https://kubiq.sk
	Text Domain: admin_bar_fix
	Domain Path: /languages
*/

defined( 'ABSPATH' ) ||	exit;

if( ! class_exists('admin_bar_fix') ){
	class admin_bar_fix{
		var $plugin_admin_page;
		var $settings;
		var $adminbar_styles = array( 'none', 'ghost', 'vertical', 'icon', 'bottom' );

		function __construct(){
			// load settings
			$defaults = array(
				'hide_admin_bar' => array(),
				'hide_item' => array(),
				'show_above' => 0,
				'adminbar_style' => 'none',
				'adminbar_position' => 'start',
				'inactive_opacity' => 100,
				'inactive_size' => 34,
				'animation_duration' => 200,
				'mouseenter_delay' => 0,
				'mouseleave_delay' => 1000,
				'remove_admin_bar_class' => 0,
			);
			$this->settings = get_option('admin_bar_settings');
			if( is_array( $this->settings ) ){
				$this->settings['hide_admin_bar'] = isset( $this->settings['hide_admin_bar'] ) ? (array)$this->settings['hide_admin_bar'] : $defaults['hide_admin_bar'];
				$this->settings['hide_item'] = isset( $this->settings['hide_item'] ) ? (array)$this->settings['hide_item'] : $defaults['hide_item'];
				$this->settings['show_above'] = isset( $this->settings['show_above'] ) ? intval( $this->settings['show_above'] ) : $defaults['show_above'];
				$this->settings['adminbar_style'] = isset( $this->settings['adminbar_style'] ) && in_array( $this->settings['adminbar_style'], $this->adminbar_styles ) ? esc_attr( $this->settings['adminbar_style'] ) : $defaults['adminbar_style'];
				$this->settings['adminbar_position'] = isset( $this->settings['adminbar_position'] ) ? esc_attr( $this->settings['adminbar_position'] ) : $defaults['adminbar_position'];
				$this->settings['inactive_opacity'] = isset( $this->settings['inactive_opacity'] ) ? intval( $this->settings['inactive_opacity'] ) : $defaults['inactive_opacity'];
				$this->settings['inactive_size'] = isset( $this->settings['inactive_size'] ) ? intval( $this->settings['inactive_size'] ) : $defaults['inactive_size'];
				$this->settings['animation_duration'] = isset( $this->settings['animation_duration'] ) ? intval( $this->settings['animation_duration'] ) : $defaults['animation_duration'];
				$this->settings['mouseenter_delay'] = isset( $this->settings['mouseenter_delay'] ) ? intval( $this->settings['mouseenter_delay'] ) : $defaults['mouseenter_delay'];
				$this->settings['mouseleave_delay'] = isset( $this->settings['mouseleave_delay'] ) ? intval( $this->settings['mouseleave_delay'] ) : $defaults['mouseleave_delay'];
				$this->settings['remove_admin_bar_class'] = isset( $this->settings['remove_admin_bar_class'] ) ? intval( $this->settings['remove_admin_bar_class'] ) : $defaults['remove_admin_bar_class'];
			}else{
				$this->settings = $defaults;
			}

			// load textdomain for translations
			add_action( 'plugins_loaded', function(){
				load_plugin_textdomain( 'admin_bar_fix', false, basename( dirname( __FILE__ ) ) . '/languages/' );
			});

			// disable 32px margin generated by WP
			add_action( 'after_setup_theme', function(){
				if( $this->settings['adminbar_style'] != 'none' ){
					remove_action( 'wp_head', '_admin_bar_bump_cb' );
					add_theme_support( 'admin-bar', array( 'callback' => '__return_false' ) );
				}
			});

			// disable admin-bar body class
			add_filter( 'body_class', function( $classes ){
				if( $this->settings['remove_admin_bar_class'] ){
					if( ( $key = array_search( 'admin-bar', $classes ) ) !== false ){
						unset( $classes[ $key ] );
					}
				}
				return $classes;
			}, 9999 );
			
			// setup plugins settings page
			add_action( 'admin_menu', array( $this, 'plugin_menu_link' ) );

			// output CSS fixes
			add_action( 'wp_head', array( $this, 'advanced_admin_bar' ), PHP_INT_MAX );
		}

		function advanced_admin_bar(){
			if( ! is_user_logged_in() ) return;

			ob_start(); ?>

			html #wpadminbar{
				overflow: hidden;
			}
			html #wpadminbar:hover{
				overflow: visible;
				opacity: 1;
			}
			html #wp-toolbar,
			html #wp-toolbar > ul{
				display: flex;
				flex-wrap: nowrap;
				height: 100%;
				min-width: 0;
				white-space: nowrap;
			}
			html #wp-toolbar > ul + ul{
				margin-left: auto;
			}
			html #wp-toolbar > ul > li{
				min-width: 0;
			}
			html #wp-toolbar > ul > li:hover{
				flex-shrink: 0;
			}
			html #wp-toolbar > ul > li > a{
				overflow: hidden;
				text-overflow: ellipsis;
			}
			html #wpadminbar:hover #wp-toolbar > ul > li{
				min-width: 0;
			}
			html #wpadminbar .ab-top-menu > .menupop > .ab-sub-wrapper{
				top: 100%;
			}

			<?php
			include_once __DIR__ . '/styles/' . $this->settings['adminbar_style'] . '.php';
			
			if( $this->settings['show_above'] ){ ?>
				@media (max-width: <?php echo intval( $this->settings['show_above'] ) - 1 ?>px){
					html #wpadminbar{
						display: none !important;
					}
				}<?php
			}

			if( count( $this->settings['hide_item'] ) ){
				echo '#wp-admin-bar-' . implode( ',#wp-admin-bar-', array_map( 'esc_attr', $this->settings['hide_item'] ) ) . '{display:none}';
			}

			$style = ob_get_clean();
			$style = str_replace(
				array( "\t", "\r\n", "\n", "\r", ': ', ';}', ' > ', ' + ' ),
				array( '', '', '', '', ':', '}', '>', '+' ),
				$style
			);

			if( count( $this->settings['hide_admin_bar'] ) ){
				$user = wp_get_current_user();
				$roles = (array)$user->roles;
				$hidden = true;
				foreach( $roles as $role ){
					if( ! in_array( $role, $this->settings['hide_admin_bar'] ) ){
						$hidden = false;
						break;
					}
				}
				if( $hidden ){
					show_admin_bar( false );
				}else{
					echo '<style>' . wp_strip_all_tags( $style ) . '</style>';
				}
			}else{
				echo '<style>' . wp_strip_all_tags( $style ) . '</style>';
			}
		}

		function plugin_menu_link(){
			$this->plugin_admin_page = add_submenu_page(
				'options-general.php',
				__( 'Admin Bar Fix', 'admin_bar_fix' ),
				__( 'Admin Bar Fix', 'admin_bar_fix' ),
				'manage_options',
				basename( __FILE__ ),
				array( $this, 'admin_options_page' )
			);

			add_filter(
				'plugin_action_links_' . plugin_basename( __FILE__ ),
				function( $links ){
					array_unshift( $links, '<a href="options-general.php?page=' . basename( __FILE__ ) . '">' . __('Settings') . '</a>' );
					return $links;
				},
				10,
				1
			);
		}

		function admin_options_page(){
			if( get_current_screen()->id != $this->plugin_admin_page ) return;
			global $wp_roles;
			if( isset( $_POST['plugin_sent'] ) && check_admin_referer('abf_settings') ){
				$hide_admin_bar = array();
				if( isset( $_POST['hide_admin_bar'] ) && is_array( $_POST['hide_admin_bar'] ) ){
					foreach( $_POST['hide_admin_bar'] as $role ){
						$hide_admin_bar[] = sanitize_text_field( $role );
					}
				}
				$hide_item = array();
				if( isset( $_POST['hide_item'] ) && is_array( $_POST['hide_item'] ) ){
					foreach( $_POST['hide_item'] as $item ){
						$hide_item[] = sanitize_text_field( $item );
					}
				}
				$this->settings = array(
					'hide_admin_bar' => $hide_admin_bar,
					'hide_item' => $hide_item,
					'show_above' => intval( $_POST['show_above'] ),
					'adminbar_style' => in_array( $_POST['adminbar_style'], $this->adminbar_styles ) ? sanitize_text_field( $_POST['adminbar_style'] ) : 'none',
					'adminbar_position' => sanitize_text_field( $_POST['adminbar_position'] ),
					'inactive_opacity' => intval( $_POST['inactive_opacity'] ),
					'inactive_size' => intval( $_POST['inactive_size'] ),
					'animation_duration' => intval( $_POST['animation_duration'] ),
					'mouseenter_delay' => intval( $_POST['mouseenter_delay'] ),
					'mouseleave_delay' => intval( $_POST['mouseleave_delay'] ),
					'remove_admin_bar_class' => isset( $_POST['remove_admin_bar_class'] ) ? 1 : 0,
				);
				update_option( 'admin_bar_settings', $this->settings );
			} ?>
			<div class="wrap">
				<h1><?php esc_html_e( 'Admin Bar Fix', 'admin_bar_fix' ) ?></h1>
				<?php if( isset( $_POST['plugin_sent'] ) ) echo '<div id="message" class="below-h2 updated"><p>' . __('Settings saved.') . '</p></div>' ?>
				<form method="post" action="<?php admin_url( 'options-general.php?page=' . basename( __FILE__ ) ) ?>">
					<?php wp_nonce_field('abf_settings') ?>
					<input type="hidden" name="plugin_sent" value="1">
					<table class="form-table">
						<tr>
							<th>
								<label><?php esc_html_e( 'Hide frontend admin bar for these user roles', 'admin_bar_fix' ) ?></label> 
							</th>
							<td style="padding-top:22px"><?php
								foreach( $wp_roles->roles as $role_slug => $role ){
									$role_slug = esc_attr( $role_slug );
									echo '<label><input type="checkbox"' . ( in_array( $role_slug, $this->settings['hide_admin_bar'] ) ? ' checked' : '' ) . ' name="hide_admin_bar[]" value="' . $role_slug . '">' . esc_html( $role['name'] ) . '</label><br>';
								} ?>
							</td>
						</tr>
						<tr>
							<th>
								<label><?php esc_html_e( 'Hide items from admin bar', 'admin_bar_fix' ) ?></label> 
							</th>
							<td style="padding-top:22px"><?php
								foreach( array( 'wp-logo', 'site-name', 'customize', 'comments', 'new-content', 'edit', 'search', 'my-account' ) as $item ){
									echo '<label><input type="checkbox"' . ( in_array( $item, $this->settings['hide_item'] ) ? ' checked' : '' ) . ' name="hide_item[]" value="' . esc_attr( $item ) . '">' . esc_html( $item ) . '</label><br>';
								} ?>
							</td>
						</tr>
						<tr>
							<th>
								<label for="remove_admin_bar_class"><?php esc_html_e( 'Remove `admin-bar` class from body', 'admin_bar_fix' ) ?></label> 
							</th>
							<td>
								<label>
									<input type="checkbox" name="remove_admin_bar_class" value="1" id="remove_admin_bar_class" <?php echo checked( $this->settings['remove_admin_bar_class'] ) ?>>
									<?php esc_html_e( 'remove admin-bar class', 'admin_bar_fix' ) ?>
								</label>
							</td>
						</tr>
						<tr>
							<th>
								<label for="show_above"><?php esc_html_e( 'Show frontend admin bar only on screens bigger than', 'admin_bar_fix' ) ?></label> 
							</th>
							<td>
								<input type="number" name="show_above" placeholder="768" value="<?php echo intval( $this->settings['show_above'] ) ?>" id="show_above"> px
								<br><small><?php esc_html_e( '* admin bar will be hidden on screens with width smaller than this', 'admin_bar_fix' ) ?></small>
							</td>
						</tr>
						<tr>
							<th>
								<label for="adminbar_style"><?php esc_html_e( 'Floating admin bar', 'admin_bar_fix' ) ?></label>
							</th>
							<td>
								<select name="adminbar_style" id="adminbar_style">
									<?php foreach( $this->adminbar_styles as $style ): ?>
										<?php echo '<option value="' . esc_attr( $style ) . '"' . ( $this->settings['adminbar_style'] == $style ? ' selected' : '' ) . '>' . esc_html( $style ) . '</option>' ?>
									<?php endforeach ?>
								</select>
							</td>
						</tr>
						<tr>
							<th>
								<label for="adminbar_position"><?php esc_html_e( 'Position', 'admin_bar_fix' ) ?></label>
							</th>
							<td>
								<select name="adminbar_position" id="adminbar_position">
									<?php foreach( array( 'start', 'center', 'end' ) as $adminbar_position ): ?>
										<?php echo '<option value="' . esc_attr( $adminbar_position ) . '"' . ( $this->settings['adminbar_position'] == $adminbar_position ? ' selected' : '' ) . '>' . esc_html( $adminbar_position ) . '</option>' ?>
									<?php endforeach ?>
								</select>
							</td>
						</tr>
						<tr>
							<th>
								<label for="inactive_opacity"><?php esc_html_e( 'Inactive opacity', 'admin_bar_fix' ) ?></label> 
							</th>
							<td>
								<input type="number" size="5" name="inactive_opacity" placeholder="100" value="<?php echo intval( $this->settings['inactive_opacity'] ) ?>" id="inactive_opacity"> %
								<br><small><?php esc_html_e( '* opacity of inactive admin bar', 'admin_bar_fix' ) ?></small>
							</td>
						</tr>
						<tr>
							<th>
								<label for="inactive_size"><?php esc_html_e( 'Inactive size', 'admin_bar_fix' ) ?></label> 
							</th>
							<td>
								<input type="number" size="5" name="inactive_size" placeholder="34" value="<?php echo intval( $this->settings['inactive_size'] ) ?>" id="inactive_size"> px
								<br><small><?php esc_html_e( '* visible width of inactive admin bar', 'admin_bar_fix' ) ?></small>
								<br><small><?php esc_html_e( '** in ghost style it is height', 'admin_bar_fix' ) ?></small>
							</td>
						</tr>
						<tr>
							<th>
								<label for="animation_duration"><?php esc_html_e( 'Animation duration', 'admin_bar_fix' ) ?></label> 
							</th>
							<td>
								<input type="number" size="5" name="animation_duration" placeholder="200" value="<?php echo intval( $this->settings['animation_duration'] ) ?>" id="animation_duration"> ms
								<br><small><?php esc_html_e( '* how fast the admin bar should expand on hover', 'admin_bar_fix' ) ?></small>
							</td>
						</tr>
						<tr>
							<th>
								<label for="mouseenter_delay"><?php esc_html_e( 'Mouse enter delay', 'admin_bar_fix' ) ?></label> 
							</th>
							<td>
								<input type="number" size="5" name="mouseenter_delay" placeholder="0" value="<?php echo intval( $this->settings['mouseenter_delay'] ) ?>" id="mouseenter_delay"> ms
								<br><small><?php esc_html_e( '* how long to wait before admin bar expand on mouse enter', 'admin_bar_fix' ) ?></small>
							</td>
						</tr>
						<tr>
							<th>
								<label for="mouseleave_delay"><?php esc_html_e( 'Mouse leave delay', 'admin_bar_fix' ) ?></label> 
							</th>
							<td>
								<input type="number" size="5" name="mouseleave_delay" placeholder="1000" value="<?php echo intval( $this->settings['mouseleave_delay'] ) ?>" id="mouseleave_delay"> ms
								<br><small><?php esc_html_e( '* how long to wait before admin bar collapse on mouse leave', 'admin_bar_fix' ) ?></small>
							</td>
						</tr>
					</table>
					<p class="submit">
						<input type="submit" class="button button-primary button-large" value="<?php esc_html_e('Save') ?>">
					</p>
				</form>
			</div>
			<script>
			var abf_default_settings = {
				none: {
					adminbar_position: 'hidden',
					inactive_opacity: 'hidden',
					inactive_size: 'hidden',
					animation_duration: 'hidden',
					mouseenter_delay: 'hidden',
					mouseleave_delay: 'hidden',
				},
				ghost: {
					adminbar_position: 'hidden',
					inactive_opacity: 20,
					inactive_size: 10,
					animation_duration: 200,
					mouseenter_delay: 100,
					mouseleave_delay: 1000,
				},
				vertical: {
					adminbar_position: {
						options: [ 'start', 'center' ],
						default: 'start',
					},
					inactive_opacity: 100,
					inactive_size: 34,
					animation_duration: 200,
					mouseenter_delay: 0,
					mouseleave_delay: 500,
				},
				icon: {
					adminbar_position: 'start',
					inactive_opacity: 100,
					inactive_size: 34,
					animation_duration: 200,
					mouseenter_delay: 0,
					mouseleave_delay: 1000,
				},
				bottom: {
					adminbar_position: 'hidden',
					inactive_opacity: 100,
					inactive_size: 32,
					animation_duration: 200,
					mouseenter_delay: 0,
					mouseleave_delay: 500,
				},
			};
			jQuery(document).ready(function($){
				function load_defaults( replace_values = false ){
					$.each( abf_default_settings[ $('#adminbar_style').val() ], function( key, value ){
						let $input = $( '#' + key );
						if( value == 'hidden' ){
							$input.closest('tr').hide();
						}else{
							$input.closest('tr').show();
							
							if( typeof value == 'object' ){
								$input.find('option').each(function( index, el ){
									if( value.options.includes( el.value ) ){
										$( el ).show();
									}else{
										$( el ).hide();
									}
								});
							}else{
								$input.find('option').show();
							}

							if( replace_values ){
								if( typeof value == 'object' ){
									$input.val( value.default );
								}else{
									$input.val( value );
								}
							}
						}
					});
				}

				load_defaults();

				$('#adminbar_style').on('change', function(){
					load_defaults( 1 );
				});
			});
			</script><?php
		}
	}

	new admin_bar_fix();
}